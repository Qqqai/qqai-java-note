package qqai.mianshi.meituan;

/**
 * @author qqai
 * @createTime 2020/10/18 10:58
 * @description：美团4 小团有一个由N个节点组成的二叉树，每个节点有一个权值。定义二叉树每条边的开销为其两端节点权值的乘积，二叉树的总开销即每条边的开销之和。小团按照二叉树的中序遍历依次记录下每个节点的权值，即他记录下了N个数，第 i 个数表示位于中序遍历第 i 个位置的节点的权值。之后由于某种原因，小团遗忘了二叉树的具体结构。在所有可能的二叉树中，总开销最小的二叉树被称为最优二叉树。现在，小团请小美求出最优二叉树的总开销。
 * <p>
 * 例如：7 6 5 1 3
 * <p>
 * 最优二叉树如图所示，总开销为7*1+6*5+5*1+1*3=45。
 * <p>
 * <p>
 * <p>
 * <p>
 * <p>
 * 输入描述
 * 第一行输入一个整数N（1<=N<=300），表示二叉树的节点数。
 * <p>
 * 第二行输入N个由空格隔开的整数，表示按中序遍历记录下的各个节点的权值，所有权值均为不超过1000的正整数。
 * <p>
 * 输出描述
 * 输出一个整数，表示最优二叉树的总开销。
 */

public class MetiTuan4 {
    public static void main(String[] args) {

    }
}
